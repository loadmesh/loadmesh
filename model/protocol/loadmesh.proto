/*
 * Copyright 2024 LoadMesh Org.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

option go_package = "model/protocol";
option java_package = "com.github.loadmesh.model.protocol";
package loadmesh;

message Metadata {
  string namespace = 1;
  string name = 2;
  string uuid = 3;
  string kind = 4;
}

enum State {
  PENDING = 0;
  ASSIGNING = 1;
  INITIATING = 2;
  RUNNING = 3;
  DELETING = 4;
  DELETED = 5;
  FAILED = 6;
}

message Resource {
  Metadata metadata = 1;
  string spec = 2;

  State state = 3;
  int64 version = 4;
  int64 last_update_time = 5;
  string executor_endpoint = 6;
  string message = 7;
  int32 retry_count = 8;
}

message Status {
  Metadata metadata = 1;
  State state = 2;
  int64 version = 3;
  string message = 4;
  int32 retry_count = 5;
}

message Request{
  // TODO: Add query feature in the future
}

message Response {
  string error = 1;
}

service Executor {
  rpc Reconcile(Resource) returns (Response) {}
  rpc StatusUpdate(Request) returns (stream Status) {}
}
